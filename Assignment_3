#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void) {
  FILE *file = fopen("input2.txt", "r");

  if (file == NULL) {
    perror("Unable to open file");
    exit(1);
  }

  char line[100];
  int n, i,j;
  fscanf(file, "%d\n", &n);
  printf(" %d\n", n);
  // fgets(line, 100, file);
  // program variables
  int A[n];
  int B;
  int F[n+1][n+1], G[n+1][n+1], P[n];
   for(i=0;i<=n;i++)
    {
      for(j=0;j<=n;j++)
        {
          F[i][j] = 0;
          G[i][j] = 0;
        }
    }

  char *token;
  int flag1=0, flag2=0, k =0;
  int size = 0;
  for(i=1;i<=n;i++)
    {
      size+=i;
    }
  size*=2;
  // size += 2*n;
  int arr[size];
  printf("\n%d\n", size);

  for(i=0, j=0;i<n;i++)
    {
      fgets(line, 100, file);
      // fscanf(file, "%[^,]s", line);
      // printf("\n%s\n",line);
      token = strtok(line, ",");

      while (token != NULL) {
      // printf("\n%d", atoi(token));
        
          // arr[j++] = atoi(token);
        
        if(flag1 == 0)
        {
          A[i] = atoi(token);
          flag1=1;
        }
        else if(flag2 == 0)
        {
          P[i] = atoi(token);
          flag2=1;
        }
        else{
          arr[j++] = atoi(token);
          // if(k<(i+1))
          // {
          //   F[i][k+1] = atoi(token);
          //   G[k][i+1] = atoi(token);
          //   k++;
          // }
        }
        
        token = strtok(NULL, ",");
      }
      flag1=0;
      flag2=0;
    }

  for(i=0;i<size;i++)
    {
      printf(" %d",arr[i]);
    }

  printf("\n A[] Values: \n");
    for(i=0;i<n;i++)
    {
      printf(" %d", A[i]);
    }
    printf("\n P[] Values: \n");
    for(i=0;i<n;i++)
    {
      printf(" %d", P[i]);
    }

  int pass, l;
  for(k=0, j=1, pass=1; k<size; )
    {
      for(i=0; i<j; i++)
        {
          for(l=0; l<pass; l++)
            {
              if(j<=n)
              {
                F[i][j] = arr[k];
                k++;
                i++;
              }
              else
                break;
            }
        }
        for(i=0; i<j; i++)
        {
          for(l=0; l<pass; l++)
            {
              if(j<=n)
              {
                G[i][j] = arr[k];
                k++;
                i++;
              }
              else
                 break;
            }
        }
      pass++;
      j++;
    }
  
  printf("\nF is: \n");
  for(i=0;i<=n;i++)
    {
      for(j=0;j<=n;j++)
        {
          printf(" %d", F[i][j]);
        }
      printf("\n");
    }
  
  printf("\nG is: \n");
  for(i=0;i<=n;i++)
    {
      for(j=0;j<=n;j++)
        {
          printf(" %d", G[i][j]);
        }
      printf("\n");
    }

  // All Inputs taken 
  // Now make the graph and compute distances between all pairs of nodes


  fclose(file);
  return 0;
}
