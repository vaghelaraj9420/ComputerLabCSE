/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

struct Date
{
    int day;
    int month;
    int year;
};

int isEUDate(char* s)
{
    // if(isdigit(dates[0]))
    //     return 1;
    // return 0;
  return s[0] >= '0' && s[0] <= '9';
}

// int isUSDate(char dates[])
// {
//     if(isaplha(dates[0]))
//         return 1;
//     return 0;
// }

int cmpDate(struct Date d1, struct Date d2)
{
    if(d1.year-d2.year > 0)
        return 1;
    else if(d1.year - d2.year < 0)
        return -1;
    else
    {
        if(d1.month - d2.month > 0)
            return 1;
        else if(d1.month - d2.month < 0)
            return -1;
        else{
            if(d1.day - d2.day > 0)
                return 1;
            else if(d1.day - d2.day < 0)
                return -1;
            else
                return 0;
        }
    }
}

int getMonth(char month[])
{
    if(strcmp(month, "JAN"))
        return 1;
    else if(strcmp(month, "FEB"))
        return 2;
    else if(strcmp(month, "MAR"))
        return 3;
    else if(strcmp(month, "APR"))
        return 4;
    else if(strcmp(month, "MAY"))
        return 5;
    else if(strcmp(month, "JUN"))
        return 6;
    else if(strcmp(month, "JUL"))
        return 7;
    else if(strcmp(month, "AUG"))
        return 8;
    else if(strcmp(month, "SEP"))
        return 9;
    else if(strcmp(month, "OCT"))
        return 10;
    else if(strcmp(month, "NOV"))
        return 11;
    else if(strcmp(month, "DEC"))
        return 12;
}

char* substring(char s[], char sub[], int p, int l) {
   int c = 0;
   
   while (c < l) {
      sub[c] = s[p+c-1];
      c++;
   }
   sub[c] = '\0';
   return sub;
}


struct Date strToDate(char s[])
{
    struct Date d;
    char day[2];
    char month[3];
    char year[4];
    if(isEUDate(s))
    {
      substring(s, day, 0,2);
      substring(s, month, 3, 6);
      substring(s, year, 7, 11);
        d.day = atoi(day);
        d.month = getMonth(month);
        d.year = atoi(year);
    }
    else
    {
      substring(s, day, 4, 6);
      substring(s, month, 0, 3);
      substring(s, year, 8, 12);
        d.day = atoi(day);
        d.month = getMonth(month);
        d.year = atoi(year);
    }
  return d;
}

void sortList(char dates[][100], int n)
{
    int i, j, x, p;
    
    for(i=0;i<n;i++)
    {
        p=0;
        for(j=i+1;j<n;j++)
        {
            struct Date d1  = strToDate(dates[i]);
            struct Date d2 = strToDate(dates[j]);
            x = cmpDate(d1,d2);
          printf("%d", x);
            if(x>0)
            {
                char* temp = malloc(sizeof(char) * 100);
                strcpy(temp, dates[i]);
                strcpy(dates[i], dates[j]);
                strcpy(dates[j], temp);
                p=1;
            }
        }
        if(p == 0)
            break;
    }
}


int main()
{
    int n,i;
    scanf("%d", &n);
    
    char dates[n][100];
    for(i=0;i<n;i++)
    {
        fgets(dates[i], 100, stdin);
      // scanf("%[^\n]%*c", dates[i]);
      // fflush(stdin);
        if(isEUDate(dates[i]))
            dates[i][11] = '\0';
        else
            dates[i][12] = '\0';
    }
    
    sortList(dates, n);
    for(i=0;i<n;i++)
        printf("%s \n", dates[i]);

    return 0;
}
