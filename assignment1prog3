
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Date {
  int day;
  int month;
  int year;
};

int isEUDate(char *s) {
  // if(isdigit(dates[0]))
  //     return 1;
  // return 0;
  return s[0] >= '0' && s[0] <= '9';
}

// int isUSDate(char dates[])
// {
//     if(isaplha(dates[0]))
//         return 1;
//     return 0;
// }

int cmpDate(struct Date d1, struct Date d2) {
  if (d1.year - d2.year > 0)
    return 1;
  else if (d1.year - d2.year < 0)
    return -1;
  else {
    if (d1.month - d2.month > 0)
      return 1;
    else if (d1.month - d2.month < 0)
      return -1;
    else {
      if (d1.day - d2.day > 0)
        return 1;
      else if (d1.day - d2.day < 0)
        return -1;
      else
        return 0;
    }
  }
}

int getMonth(char month[]) {
  if (strcmp(month, "Jan") == 0)
    return 1;
  else if (strcmp(month, "Feb") == 0)
    return 2;
  else if (strcmp(month, "Mar") == 0)
    return 3;
  else if (strcmp(month, "Apr") == 0)
    return 4;
  else if (strcmp(month, "May") == 0)
    return 5;
  else if (strcmp(month, "Jun") == 0)
    return 6;
  else if (strcmp(month, "Jul") == 0)
    return 7;
  else if (strcmp(month, "Aug") == 0)
    return 8;
  else if (strcmp(month, "Sep") == 0)
    return 9;
  else if (strcmp(month, "Oct") == 0)
    return 10;
  else if (strcmp(month, "Nov") == 0)
    return 11;
  else if (strcmp(month, "Dec") == 0)
    return 12;
}

char *substring(char s[], int p, int l) {
  int c = 0;
  char *sub = malloc(sizeof(char) * (l + 1));
  while (c < l) {
    sub[c] = s[p + c];
    c++;
  }
  sub[c] = '\0';
  return sub;
}

struct Date strToDate(char s[]) {
  struct Date d;
  char day[2];
  char month[3];
  char year[4];
  if (isEUDate(s)) {
    strcpy(day, substring(s, 0, 2));
    strcpy(month, substring(s, 3, 6));
    strcpy(year, substring(s, 7, 11));
    d.day = atoi(day);
    d.month = getMonth(month);
    d.year = atoi(year);
  } else {
    strcpy(day, substring(s, 4, 6));
    strcpy(month, substring(s, 0, 3));
    strcpy(year, substring(s, 8, 12));
    d.day = atoi(day);
    d.month = getMonth(month);
    d.year = atoi(year);
  }
  return d;
}

void sortList(char dates[][100], int n) {
  int i, j, x, p;

  for (i = 0; i < n-1; i++) {
    p = 0;
    for (j = i + 1; j < n; j++) {
      struct Date d1 = strToDate(dates[i]);
      struct Date d2 = strToDate(dates[j]);
      x = cmpDate(d1, d2);
    //   printf("%d", x);
      if (x < 0) {
        char *temp = malloc(sizeof(char) * 50);
        strcpy(temp, dates[i]);
        strcpy(dates[i], dates[j]);
        strcpy(dates[j], temp);
        p = 1;
      }
    }
    if (p == 0)
      break;
  }
}

int main() {
  int n, i;
  scanf("%d\n", &n);

  char dates[n][100];
  for (i = 0; i < n; i++) {
    fgets(dates[i], 100, stdin);
    // scanf("%[^\n]%*c", dates[i]);
    // fflush(stdin);
    if (isEUDate(dates[i]))
      dates[i][11] = '\0';
    else
      dates[i][12] = '\0';
  }
// for (i = 0; i < n; i++)
//     printf("%s \n", dates[i]);
  sortList(dates, n);
  for (i = n-1; i >= 0; i--)
    printf("%s \n", dates[i]);

  return 0;
}

