#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct node{
  int data;
  struct node *next;
}*head=NULL;

struct node* create(int A[], int n)
{
  int i;
  struct node *temp, *last, *p;
  p = (struct node *)malloc(sizeof(struct node));
  p->data = A[0];
  p->next = NULL;
  last = p;

  for(i=1;i<=n;i++)
    {
      temp = (struct node *)malloc(sizeof(struct node));
      temp->data = A[i];
      temp->next = NULL;
      last->next = temp;
      last = temp;
    }
  return p;
}

struct node* addNode(int data)
{
  struct node* temp = (struct node*)malloc(sizeof(struct node));
  temp->data = data;
  temp->next = NULL;
  return temp;
}

void reverseLinkList(struct node* p){  // code to be done later
 struct node* current = p;
  struct node* prev = NULL;
  struct node* next = NULL;

  while(current != NULL)
    {
      next = current->next;
      current->next = prev;
      prev = current;
      current = next;
    }
  p = prev;
  
}


void display(struct node *p)
{
  while(p!=NULL)
    {
      printf("%d", p->data);
      p = p->next;
    }
}


struct node* addLinkList(struct node* p, struct node* q)
{
  
}




int main()
{
  char A[15]="";
  char B[15]="";
  scanf("%s", A);
  scanf("%s", B);
  int i = strlen(A)-1;
  int j = strlen(B)-1;
  int x[i+1];
  int y[j+1];
  while(i>=0)
    {
      x[i] = A[i]-48;
      i--;
    }
   while(j>=0)
    {
      y[j] = B[j]-48;
      j--;
    }
   i = strlen(A)-1;
   j = strlen(B)-1;

  struct node* first = create(x,i);
  reverseLinkList(first);
   display(first);
  printf("\n");
  struct node* second = create(y,j);
  reverseLinkList(second);
  display(second);

  struct node* add = addLinkList(first,second);

  // AddIntegers(x,y);
  return 0;
}
